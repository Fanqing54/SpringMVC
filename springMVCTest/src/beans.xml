<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
         
	<!-- 打开Spring的Annotation支持 -->
	<context:annotation-config />
	<!-- 设定Spring 去哪些包中找Annotation -->
	  <context:component-scan base-package="fan" />

	
		<!-- 1、数据源：DriverManagerDataSource -->
	<!-- <bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	
	
	
	<bean id="ds" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="jdbc:mysql://localhost:3306/spring_user?zeroDateTimeBehavior=round"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		 <property name="maxActive" value="20"/>
        <property name="minIdle" value="10"/>
        <property name="maxWait" value="5000"/>
        <property name="filters" value="stat"/>
	</bean>

	<!-- 2、mybatis的SqlSession的工厂：SqlSessionFactoryBean dataSource:引用数据源 typeAliasesPackage:指定实体类的包名，自动将实体的简单类名映射成别名 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds"></property>
		<property name="typeAliasesPackage" value="fan.model"></property>
	</bean>

	<!-- 3、mybatis自动扫描加载Sql映射文件：MapperScannerConfigurer basePackage:指定Sql映射文件/接口所在的包（自动扫描） 
		sqlSessionFactory:引用上面定义的sqlSessionFactory -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="fan.dao"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 4、事务管理：DataSourceTransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>

	<!-- 5、使用声明式事务 transaction-manager:引用上面定义的事务管理器驱动 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>
<!-- Ehcache整合spring配置文件 -->
<!--  <bean id="cacheManagerFactory"  
    class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"  
    p:configLocation="classpath:ehcache.xml"></bean>-->  
  
<!-- 声明cacheManager -->  
<!-- <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"   
    p:cacheManager-ref="cacheManagerFactory" ></bean>-->